{"ast":null,"code":"import * as tty from \"tty\";\nconst env = process.env || {};\nconst argv = process.argv || [];\nconst isDisabled = \"NO_COLOR\" in env || argv.includes(\"--no-color\");\nconst isForced = \"FORCE_COLOR\" in env || argv.includes(\"--color\");\nconst isWindows = process.platform === \"win32\";\nconst isCompatibleTerminal = tty && tty.isatty && tty.isatty(1) && env.TERM && env.TERM !== \"dumb\";\nconst isCI = \"CI\" in env && (\"GITHUB_ACTIONS\" in env || \"GITLAB_CI\" in env || \"CIRCLECI\" in env);\nexport const isColorSupported = !isDisabled && (isForced || isWindows || isCompatibleTerminal || isCI);\n\nconst replaceClose = function (index, string, close, replace) {\n  let head = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : string.substring(0, index) + replace;\n  let tail = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : string.substring(index + close.length);\n  let next = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : tail.indexOf(close);\n  return head + (next < 0 ? tail : replaceClose(next, tail, close, replace));\n};\n\nconst clearBleed = (index, string, open, close, replace) => index < 0 ? open + string + close : open + replaceClose(index, string, close, replace) + close;\n\nconst filterEmpty = function (open, close) {\n  let replace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : open;\n  let at = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : open.length + 1;\n  return string => string || !(string === \"\" || string === undefined) ? clearBleed((\"\" + string).indexOf(close, at), string, open, close, replace) : \"\";\n};\n\nconst init = (open, close, replace) => filterEmpty(`\\x1b[${open}m`, `\\x1b[${close}m`, replace);\n\nconst colors = {\n  reset: init(0, 0),\n  bold: init(1, 22, \"\\x1b[22m\\x1b[1m\"),\n  dim: init(2, 22, \"\\x1b[22m\\x1b[2m\"),\n  italic: init(3, 23),\n  underline: init(4, 24),\n  inverse: init(7, 27),\n  hidden: init(8, 28),\n  strikethrough: init(9, 29),\n  black: init(30, 39),\n  red: init(31, 39),\n  green: init(32, 39),\n  yellow: init(33, 39),\n  blue: init(34, 39),\n  magenta: init(35, 39),\n  cyan: init(36, 39),\n  white: init(37, 39),\n  gray: init(90, 39),\n  bgBlack: init(40, 49),\n  bgRed: init(41, 49),\n  bgGreen: init(42, 49),\n  bgYellow: init(43, 49),\n  bgBlue: init(44, 49),\n  bgMagenta: init(45, 49),\n  bgCyan: init(46, 49),\n  bgWhite: init(47, 49),\n  blackBright: init(90, 39),\n  redBright: init(91, 39),\n  greenBright: init(92, 39),\n  yellowBright: init(93, 39),\n  blueBright: init(94, 39),\n  magentaBright: init(95, 39),\n  cyanBright: init(96, 39),\n  whiteBright: init(97, 39),\n  bgBlackBright: init(100, 49),\n  bgRedBright: init(101, 49),\n  bgGreenBright: init(102, 49),\n  bgYellowBright: init(103, 49),\n  bgBlueBright: init(104, 49),\n  bgMagentaBright: init(105, 49),\n  bgCyanBright: init(106, 49),\n  bgWhiteBright: init(107, 49)\n};\n\nconst none = any => any;\n\nexport const createColors = function () {\n  let {\n    useColor = isColorSupported\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return useColor ? colors : Object.keys(colors).reduce((colors, key) => ({ ...colors,\n    [key]: none\n  }), {});\n};\nexport const {\n  reset,\n  bold,\n  dim,\n  italic,\n  underline,\n  inverse,\n  hidden,\n  strikethrough,\n  black,\n  red,\n  green,\n  yellow,\n  blue,\n  magenta,\n  cyan,\n  white,\n  gray,\n  bgBlack,\n  bgRed,\n  bgGreen,\n  bgYellow,\n  bgBlue,\n  bgMagenta,\n  bgCyan,\n  bgWhite,\n  blackBright,\n  redBright,\n  greenBright,\n  yellowBright,\n  blueBright,\n  magentaBright,\n  cyanBright,\n  whiteBright,\n  bgBlackBright,\n  bgRedBright,\n  bgGreenBright,\n  bgYellowBright,\n  bgBlueBright,\n  bgMagentaBright,\n  bgCyanBright,\n  bgWhiteBright\n} = createColors();","map":{"version":3,"sources":["/Users/renxueqiang/Desktop/React/demo/node_modules/colorette/index.js"],"names":["tty","env","process","argv","isDisabled","includes","isForced","isWindows","platform","isCompatibleTerminal","isatty","TERM","isCI","isColorSupported","replaceClose","index","string","close","replace","head","substring","tail","length","next","indexOf","clearBleed","open","filterEmpty","at","undefined","init","colors","reset","bold","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","blackBright","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","none","any","createColors","useColor","Object","keys","reduce","key"],"mappings":"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","sourcesContent":["import * as tty from \"tty\"\n\nconst env = process.env || {}\nconst argv = process.argv || []\n\nconst isDisabled = \"NO_COLOR\" in env || argv.includes(\"--no-color\")\nconst isForced = \"FORCE_COLOR\" in env || argv.includes(\"--color\")\nconst isWindows = process.platform === \"win32\"\n\nconst isCompatibleTerminal =\n  tty && tty.isatty && tty.isatty(1) && env.TERM && env.TERM !== \"dumb\"\n\nconst isCI =\n  \"CI\" in env &&\n  (\"GITHUB_ACTIONS\" in env || \"GITLAB_CI\" in env || \"CIRCLECI\" in env)\n\nexport const isColorSupported =\n  !isDisabled && (isForced || isWindows || isCompatibleTerminal || isCI)\n\nconst replaceClose = (\n  index,\n  string,\n  close,\n  replace,\n  head = string.substring(0, index) + replace,\n  tail = string.substring(index + close.length),\n  next = tail.indexOf(close)\n) => head + (next < 0 ? tail : replaceClose(next, tail, close, replace))\n\nconst clearBleed = (index, string, open, close, replace) =>\n  index < 0\n    ? open + string + close\n    : open + replaceClose(index, string, close, replace) + close\n\nconst filterEmpty =\n  (open, close, replace = open, at = open.length + 1) =>\n  (string) =>\n    string || !(string === \"\" || string === undefined)\n      ? clearBleed(\n          (\"\" + string).indexOf(close, at),\n          string,\n          open,\n          close,\n          replace\n        )\n      : \"\"\n\nconst init = (open, close, replace) =>\n  filterEmpty(`\\x1b[${open}m`, `\\x1b[${close}m`, replace)\n\nconst colors = {\n  reset: init(0, 0),\n  bold: init(1, 22, \"\\x1b[22m\\x1b[1m\"),\n  dim: init(2, 22, \"\\x1b[22m\\x1b[2m\"),\n  italic: init(3, 23),\n  underline: init(4, 24),\n  inverse: init(7, 27),\n  hidden: init(8, 28),\n  strikethrough: init(9, 29),\n  black: init(30, 39),\n  red: init(31, 39),\n  green: init(32, 39),\n  yellow: init(33, 39),\n  blue: init(34, 39),\n  magenta: init(35, 39),\n  cyan: init(36, 39),\n  white: init(37, 39),\n  gray: init(90, 39),\n  bgBlack: init(40, 49),\n  bgRed: init(41, 49),\n  bgGreen: init(42, 49),\n  bgYellow: init(43, 49),\n  bgBlue: init(44, 49),\n  bgMagenta: init(45, 49),\n  bgCyan: init(46, 49),\n  bgWhite: init(47, 49),\n  blackBright: init(90, 39),\n  redBright: init(91, 39),\n  greenBright: init(92, 39),\n  yellowBright: init(93, 39),\n  blueBright: init(94, 39),\n  magentaBright: init(95, 39),\n  cyanBright: init(96, 39),\n  whiteBright: init(97, 39),\n  bgBlackBright: init(100, 49),\n  bgRedBright: init(101, 49),\n  bgGreenBright: init(102, 49),\n  bgYellowBright: init(103, 49),\n  bgBlueBright: init(104, 49),\n  bgMagentaBright: init(105, 49),\n  bgCyanBright: init(106, 49),\n  bgWhiteBright: init(107, 49),\n}\n\nconst none = (any) => any\n\nexport const createColors = ({ useColor = isColorSupported } = {}) =>\n  useColor\n    ? colors\n    : Object.keys(colors).reduce(\n        (colors, key) => ({ ...colors, [key]: none }),\n        {}\n      )\n\nexport const {\n  reset,\n  bold,\n  dim,\n  italic,\n  underline,\n  inverse,\n  hidden,\n  strikethrough,\n  black,\n  red,\n  green,\n  yellow,\n  blue,\n  magenta,\n  cyan,\n  white,\n  gray,\n  bgBlack,\n  bgRed,\n  bgGreen,\n  bgYellow,\n  bgBlue,\n  bgMagenta,\n  bgCyan,\n  bgWhite,\n  blackBright,\n  redBright,\n  greenBright,\n  yellowBright,\n  blueBright,\n  magentaBright,\n  cyanBright,\n  whiteBright,\n  bgBlackBright,\n  bgRedBright,\n  bgGreenBright,\n  bgYellowBright,\n  bgBlueBright,\n  bgMagentaBright,\n  bgCyanBright,\n  bgWhiteBright,\n} = createColors()\n"]},"metadata":{},"sourceType":"module"}